// Code generated by mocker. DO NOT EDIT.
// github.com/travisjeffery/mocker
// Source: pb/registrationsvc/v1/registrationsvc.pb.go

package mock

import (
	context "context"
	sync "sync"

	github_com_stkr89_livegig_common_pb_registrationsvc_v1 "github.com/stkr89/livegig-common/pb/registrationsvc/v1"
	google_golang_org_grpc "google.golang.org/grpc"
)

// MockRegistrationSvcClient is a mock of RegistrationSvcClient interface
type MockRegistrationSvcClient struct {
	lockRegister sync.Mutex
	RegisterFunc func(ctx context.Context, in *github_com_stkr89_livegig_common_pb_registrationsvc_v1.RegisterRequest, opts ...google_golang_org_grpc.CallOption) (*github_com_stkr89_livegig_common_pb_registrationsvc_v1.RegisterResponse, error)

	calls struct {
		Register []struct {
			Ctx  context.Context
			In   *github_com_stkr89_livegig_common_pb_registrationsvc_v1.RegisterRequest
			Opts []google_golang_org_grpc.CallOption
		}
	}
}

// Register mocks base method by wrapping the associated func.
func (m *MockRegistrationSvcClient) Register(ctx context.Context, in *github_com_stkr89_livegig_common_pb_registrationsvc_v1.RegisterRequest, opts ...google_golang_org_grpc.CallOption) (*github_com_stkr89_livegig_common_pb_registrationsvc_v1.RegisterResponse, error) {
	m.lockRegister.Lock()
	defer m.lockRegister.Unlock()

	if m.RegisterFunc == nil {
		panic("mocker: MockRegistrationSvcClient.RegisterFunc is nil but MockRegistrationSvcClient.Register was called.")
	}

	call := struct {
		Ctx  context.Context
		In   *github_com_stkr89_livegig_common_pb_registrationsvc_v1.RegisterRequest
		Opts []google_golang_org_grpc.CallOption
	}{
		Ctx:  ctx,
		In:   in,
		Opts: opts,
	}

	m.calls.Register = append(m.calls.Register, call)

	return m.RegisterFunc(ctx, in, opts...)
}

// RegisterCalled returns true if Register was called at least once.
func (m *MockRegistrationSvcClient) RegisterCalled() bool {
	m.lockRegister.Lock()
	defer m.lockRegister.Unlock()

	return len(m.calls.Register) > 0
}

// RegisterCalls returns the calls made to Register.
func (m *MockRegistrationSvcClient) RegisterCalls() []struct {
	Ctx  context.Context
	In   *github_com_stkr89_livegig_common_pb_registrationsvc_v1.RegisterRequest
	Opts []google_golang_org_grpc.CallOption
} {
	m.lockRegister.Lock()
	defer m.lockRegister.Unlock()

	return m.calls.Register
}

// Reset resets the calls made to the mocked methods.
func (m *MockRegistrationSvcClient) Reset() {
	m.lockRegister.Lock()
	m.calls.Register = nil
	m.lockRegister.Unlock()
}
