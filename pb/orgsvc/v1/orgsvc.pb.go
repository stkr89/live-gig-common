// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/orgsvc/v1/orgsvc.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// get user org request
type GetUserOrgRequest struct {
	// id of user
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserOrgRequest) Reset()         { *m = GetUserOrgRequest{} }
func (m *GetUserOrgRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserOrgRequest) ProtoMessage()    {}
func (*GetUserOrgRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a94a9b62e908a3f, []int{0}
}

func (m *GetUserOrgRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserOrgRequest.Unmarshal(m, b)
}
func (m *GetUserOrgRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserOrgRequest.Marshal(b, m, deterministic)
}
func (m *GetUserOrgRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserOrgRequest.Merge(m, src)
}
func (m *GetUserOrgRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserOrgRequest.Size(m)
}
func (m *GetUserOrgRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserOrgRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserOrgRequest proto.InternalMessageInfo

func (m *GetUserOrgRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// delete user response
type DeleteResonse struct {
	Errors               []*ErrorType `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteResonse) Reset()         { *m = DeleteResonse{} }
func (m *DeleteResonse) String() string { return proto.CompactTextString(m) }
func (*DeleteResonse) ProtoMessage()    {}
func (*DeleteResonse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a94a9b62e908a3f, []int{1}
}

func (m *DeleteResonse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResonse.Unmarshal(m, b)
}
func (m *DeleteResonse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResonse.Marshal(b, m, deterministic)
}
func (m *DeleteResonse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResonse.Merge(m, src)
}
func (m *DeleteResonse) XXX_Size() int {
	return xxx_messageInfo_DeleteResonse.Size(m)
}
func (m *DeleteResonse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResonse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResonse proto.InternalMessageInfo

func (m *DeleteResonse) GetErrors() []*ErrorType {
	if m != nil {
		return m.Errors
	}
	return nil
}

// delete user request
type DeleteRequest struct {
	// id of user
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a94a9b62e908a3f, []int{2}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// org response
type OrgResponse struct {
	// unique id of org
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AdminUserId          string   `protobuf:"bytes,3,opt,name=adminUserId,proto3" json:"adminUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrgResponse) Reset()         { *m = OrgResponse{} }
func (m *OrgResponse) String() string { return proto.CompactTextString(m) }
func (*OrgResponse) ProtoMessage()    {}
func (*OrgResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a94a9b62e908a3f, []int{3}
}

func (m *OrgResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrgResponse.Unmarshal(m, b)
}
func (m *OrgResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrgResponse.Marshal(b, m, deterministic)
}
func (m *OrgResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrgResponse.Merge(m, src)
}
func (m *OrgResponse) XXX_Size() int {
	return xxx_messageInfo_OrgResponse.Size(m)
}
func (m *OrgResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrgResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrgResponse proto.InternalMessageInfo

func (m *OrgResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrgResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrgResponse) GetAdminUserId() string {
	if m != nil {
		return m.AdminUserId
	}
	return ""
}

// create org request
type CreateRequest struct {
	// name or org
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// user id of admin
	AdminUserId          string   `protobuf:"bytes,2,opt,name=adminUserId,proto3" json:"adminUserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a94a9b62e908a3f, []int{4}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetAdminUserId() string {
	if m != nil {
		return m.AdminUserId
	}
	return ""
}

// error type
type ErrorType struct {
	// http error code
	StatusCode int32 `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	// error detail
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorType) Reset()         { *m = ErrorType{} }
func (m *ErrorType) String() string { return proto.CompactTextString(m) }
func (*ErrorType) ProtoMessage()    {}
func (*ErrorType) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a94a9b62e908a3f, []int{5}
}

func (m *ErrorType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorType.Unmarshal(m, b)
}
func (m *ErrorType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorType.Marshal(b, m, deterministic)
}
func (m *ErrorType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorType.Merge(m, src)
}
func (m *ErrorType) XXX_Size() int {
	return xxx_messageInfo_ErrorType.Size(m)
}
func (m *ErrorType) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorType.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorType proto.InternalMessageInfo

func (m *ErrorType) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *ErrorType) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*GetUserOrgRequest)(nil), "pb.orgsvc.v1.GetUserOrgRequest")
	proto.RegisterType((*DeleteResonse)(nil), "pb.orgsvc.v1.DeleteResonse")
	proto.RegisterType((*DeleteRequest)(nil), "pb.orgsvc.v1.DeleteRequest")
	proto.RegisterType((*OrgResponse)(nil), "pb.orgsvc.v1.OrgResponse")
	proto.RegisterType((*CreateRequest)(nil), "pb.orgsvc.v1.CreateRequest")
	proto.RegisterType((*ErrorType)(nil), "pb.orgsvc.v1.ErrorType")
}

func init() { proto.RegisterFile("pb/orgsvc/v1/orgsvc.proto", fileDescriptor_0a94a9b62e908a3f) }

var fileDescriptor_0a94a9b62e908a3f = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcd, 0x4e, 0xfa, 0x40,
	0x14, 0xc5, 0xff, 0x2d, 0x7f, 0x6b, 0xb8, 0x7c, 0x24, 0xde, 0x8d, 0x05, 0x13, 0x21, 0x75, 0xc3,
	0xaa, 0x04, 0x7c, 0x01, 0xc3, 0x47, 0x8c, 0x6e, 0x48, 0x8a, 0x6e, 0xdc, 0x15, 0x7a, 0xd3, 0x90,
	0xd8, 0x4e, 0x9d, 0x3b, 0x34, 0xf1, 0x65, 0x7d, 0x16, 0xc3, 0xb4, 0xb5, 0x2d, 0x82, 0xbb, 0xe9,
	0x39, 0x93, 0xdf, 0x3d, 0x3d, 0x73, 0xa1, 0x97, 0x6c, 0xc6, 0x42, 0x86, 0x9c, 0x6e, 0xc7, 0xe9,
	0x24, 0x3f, 0xb9, 0x89, 0x14, 0x4a, 0x60, 0x3b, 0xd9, 0xb8, 0xb9, 0x90, 0x4e, 0x9c, 0x3b, 0xb8,
	0x7a, 0x24, 0xf5, 0xca, 0x24, 0x57, 0x32, 0xf4, 0xe8, 0x63, 0x4f, 0xac, 0xb0, 0x0b, 0xe6, 0x2e,
	0xb0, 0x8d, 0xa1, 0x31, 0x6a, 0x7a, 0xe6, 0x2e, 0x70, 0x1e, 0xa0, 0xb3, 0xa0, 0x77, 0x52, 0xe4,
	0x11, 0x8b, 0x98, 0x09, 0xc7, 0x60, 0x91, 0x94, 0x42, 0xb2, 0x6d, 0x0c, 0x1b, 0xa3, 0xd6, 0xf4,
	0xda, 0xad, 0x42, 0xdd, 0xe5, 0xc1, 0x7b, 0xf9, 0x4c, 0xc8, 0xcb, 0xaf, 0x39, 0x83, 0x92, 0x70,
	0x7a, 0xc4, 0x1a, 0x5a, 0x3a, 0x00, 0x27, 0x7a, 0xc0, 0x91, 0x8d, 0x08, 0xff, 0x63, 0x3f, 0x22,
	0xdb, 0xd4, 0x8a, 0x3e, 0xe3, 0x10, 0x5a, 0x7e, 0x10, 0xed, 0xe2, 0x43, 0xf8, 0xa7, 0xc0, 0x6e,
	0x68, 0xab, 0x2a, 0x39, 0x4b, 0xe8, 0xcc, 0x25, 0xf9, 0xe5, 0xd4, 0x02, 0x63, 0x9c, 0xc7, 0x98,
	0xa7, 0x30, 0xcd, 0x9f, 0x3f, 0xc2, 0x5b, 0x00, 0x56, 0xbe, 0xda, 0xf3, 0x5c, 0x04, 0x19, 0xe8,
	0xc2, 0xab, 0x28, 0x68, 0xc3, 0x65, 0x44, 0xcc, 0x7e, 0x58, 0x84, 0x2d, 0x3e, 0xa7, 0x5f, 0x06,
	0x58, 0x2b, 0x19, 0xae, 0xd3, 0x2d, 0xce, 0xc0, 0xca, 0x82, 0xe1, 0x4d, 0xbd, 0xb9, 0x5a, 0xdc,
	0x7e, 0xaf, 0x6e, 0x56, 0x0a, 0x72, 0xfe, 0xe1, 0x02, 0xac, 0xac, 0xd2, 0x63, 0x46, 0xad, 0xe8,
	0xfe, 0x19, 0x93, 0x73, 0xca, 0x33, 0x40, 0xf9, 0xfe, 0x38, 0xa8, 0x5f, 0xfe, 0xb5, 0x19, 0x7f,
	0x26, 0x9a, 0x75, 0xdf, 0xda, 0xd5, 0xb5, 0xdb, 0x58, 0x7a, 0xe1, 0xee, 0xbf, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x04, 0xb1, 0x98, 0x3c, 0x8d, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrgSvcClient is the client API for OrgSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrgSvcClient interface {
	// create new org
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*OrgResponse, error)
	// delete org
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResonse, error)
	// get user org
	GetUserOrg(ctx context.Context, in *GetUserOrgRequest, opts ...grpc.CallOption) (*OrgResponse, error)
}

type orgSvcClient struct {
	cc *grpc.ClientConn
}

func NewOrgSvcClient(cc *grpc.ClientConn) OrgSvcClient {
	return &orgSvcClient{cc}
}

func (c *orgSvcClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*OrgResponse, error) {
	out := new(OrgResponse)
	err := c.cc.Invoke(ctx, "/pb.orgsvc.v1.OrgSvc/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgSvcClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResonse, error) {
	out := new(DeleteResonse)
	err := c.cc.Invoke(ctx, "/pb.orgsvc.v1.OrgSvc/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orgSvcClient) GetUserOrg(ctx context.Context, in *GetUserOrgRequest, opts ...grpc.CallOption) (*OrgResponse, error) {
	out := new(OrgResponse)
	err := c.cc.Invoke(ctx, "/pb.orgsvc.v1.OrgSvc/GetUserOrg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrgSvcServer is the server API for OrgSvc service.
type OrgSvcServer interface {
	// create new org
	Create(context.Context, *CreateRequest) (*OrgResponse, error)
	// delete org
	Delete(context.Context, *DeleteRequest) (*DeleteResonse, error)
	// get user org
	GetUserOrg(context.Context, *GetUserOrgRequest) (*OrgResponse, error)
}

// UnimplementedOrgSvcServer can be embedded to have forward compatible implementations.
type UnimplementedOrgSvcServer struct {
}

func (*UnimplementedOrgSvcServer) Create(ctx context.Context, req *CreateRequest) (*OrgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedOrgSvcServer) Delete(ctx context.Context, req *DeleteRequest) (*DeleteResonse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedOrgSvcServer) GetUserOrg(ctx context.Context, req *GetUserOrgRequest) (*OrgResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserOrg not implemented")
}

func RegisterOrgSvcServer(s *grpc.Server, srv OrgSvcServer) {
	s.RegisterService(&_OrgSvc_serviceDesc, srv)
}

func _OrgSvc_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgSvcServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.orgsvc.v1.OrgSvc/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgSvcServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrgSvc_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgSvcServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.orgsvc.v1.OrgSvc/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgSvcServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrgSvc_GetUserOrg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserOrgRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrgSvcServer).GetUserOrg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.orgsvc.v1.OrgSvc/GetUserOrg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrgSvcServer).GetUserOrg(ctx, req.(*GetUserOrgRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrgSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.orgsvc.v1.OrgSvc",
	HandlerType: (*OrgSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _OrgSvc_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _OrgSvc_Delete_Handler,
		},
		{
			MethodName: "GetUserOrg",
			Handler:    _OrgSvc_GetUserOrg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/orgsvc/v1/orgsvc.proto",
}
